# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend Build and Test Job
  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Build frontend
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ matrix.node-version }}
        path: frontend/build/
        retention-days: 30

  # Backend Build and Test Job
  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    defaults:
      run:
        working-directory: ./backend
    
    services:
      # Example database service (adjust as needed)
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Wait for services
      run: |
        timeout 30 bash -c 'until nc -z localhost 5432; do sleep 1; done'
        timeout 30 bash -c 'until nc -z localhost 6379; do sleep 1; done'
    
    - name: Run database migrations
      run: npm run migrate
      env:
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
        REDIS_URL: redis://localhost:6379
    
    - name: Run tests
      run: npm test -- --coverage
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
        REDIS_URL: redis://localhost:6379
    
    - name: Build backend
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build-${{ matrix.node-version }}
        path: backend/dist/
        retention-days: 30

  # Integration Tests (optional)
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Download frontend artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build-20.x
        path: frontend/build/
    
    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-build-20.x
        path: backend/dist/
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./tests/integration
    
    - name: Run integration tests
      run: npm test
      working-directory: ./tests/integration

  # Security and Quality Checks
  security:
    name: Security & Quality
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Run security audit (Frontend)
      run: npm audit --audit-level high
      working-directory: ./frontend
      continue-on-error: true
    
    - name: Run security audit (Backend)
      run: npm audit --audit-level high
      working-directory: ./backend
      continue-on-error: true
    
    - name: Run dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'full-stack-app'
        path: '.'
        format: 'HTML'
        out: 'reports'
    
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: reports/
        retention-days: 30
